AWSTemplateFormatVersion: "2010-09-09"
Description: Pre-requests for CodePipeline

Resources:

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: expire-old-objects
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /service-role/

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeCommitReadOnly
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess
      Policies:
        - PolicyName: CloudWatchLogsAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  CodePipelineCannedPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CodePipelineCannedPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:PutObject
            Effect: Allow
            Resource:
              - arn:aws:s3:::codepipeline*
              - arn:aws:s3:::elasticbeanstalk*
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
            Effect: Allow
            Resource: '*'
          - Action:
              - elasticbeanstalk:*
              - autoscaling:*
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeScalingActivities
              - autoscaling:ResumeProcesses
              - autoscaling:SuspendProcesses
              - cloudformation:GetTemplate
              - cloudformation:DescribeStackResource
              - cloudformation:DescribeStackResources
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - ec2:DescribeInstances
              - ec2:DescribeImages
              - ec2:DescribeAddresses
              - ec2:DescribeSubnets
              - ec2:DescribeVpcs
              - ec2:DescribeSecurityGroups
              - ec2:DescribeKeyPairs
              - elasticloadbalancing:DescribeLoadBalancers
              - rds:DescribeDBInstances
              - rds:DescribeOrderableDBInstanceOptions
              - sns:ListSubscriptionsByTopic
            Effect: Allow
            Resource: '*'
          - Action:
              - lambda:invokefunction
              - lambda:listfunctions
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:ListBucket
              - s3:GetBucketPolicy
              - s3:GetObjectAcl
              - s3:PutObjectAcl
              - s3:DeleteObject
            Effect: Allow
            Resource: arn:aws:s3:::elasticbeanstalk*
          - Action:
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:UploadArchive
              - codecommit:GetUploadArchiveStatus
              - codecommit:CancelUploadArchive
            Effect: Allow
            Resource: '*'
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref CodePipelineServiceRole

  SharedDeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Action:
              - "s3:DeleteObject"
              - "s3:GetObject"
              - "s3:GetObjectVersion"
              - "s3:ListBucket"
              - "s3:PutObject"
              - "s3:GetBucketPolicy"
            Resource:
              - !GetAtt ArtifactBucket.Arn
              - !Sub
                - '${ARN}/*'
                - ARN: !GetAtt ArtifactBucket.Arn
          -
            Effect: "Allow"
            Action:
              - "codecommit:ListBranches"
              - "codecommit:ListRepositories"
              - "codecommit:BatchGetRepositories"
              - "codecommit:Get*"
              - "codecommit:GitPull"
              - "codecommit:UploadArchive"
            Resource:
              - '*'
          - Effect: "Allow"
            Action:
              - "cloudformation:CreateChangeSet"
              - "cloudformation:CreateStack"
              - "cloudformation:CreateUploadBucket"
              - "cloudformation:DeleteChangeSet"
              - "cloudformation:DeleteStack"
              - "cloudformation:Describe*"
              - "cloudformation:List*"
              - "cloudformation:UpdateStack"
              - "cloudformation:ValidateTemplate"
              - "cloudformation:ExecuteChangeSet"
            Resource:
              - '*'
          - Effect: "Allow"
            Action:
              - "codebuild:StartBuild"
              - "codebuild:BatchGetBuilds"
            Resource:
              - '*'
          - Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource:
              - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/CfnStackRole-${AWS::StackName}
      Roles:
        - !Ref CodePipelineServiceRole
        - !Ref CodeBuildServiceRole


  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CfnStackRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess


Outputs:

  StackName:
    Description: Name of the current stack
    Value: !Ref AWS::StackName

  ArtifactBucket:
    Description: Artifact bucket name
    Value: !Ref ArtifactBucket
    Export:
      Name: !Sub ${AWS::StackName}:ArtifactBucket

  ArtifactBucketArn:
    Description: Artifact bucket ARN
    Value: !GetAtt ArtifactBucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}:ArtifactBucketArn

  CodePipelineRoleArn:
    Description: CodePipeline role ARN
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}:CodePipelineRoleArn

  CodeBuildRoleArn:
    Description: CodeBuild role ARN
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}:CodeBuildRoleArn

  CloudFormationRoleArn:
    Description: CloudFormation Stack role ARN
    Value: !GetAtt CloudFormationRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}:CloudFormationRoleArn

